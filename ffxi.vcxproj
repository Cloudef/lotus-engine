<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <ProjectGuid>{6FD7F5B6-AA77-49FF-AE50-4CCE6F9CF507}</ProjectGuid>
    <RootNamespace>lotusengine</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <IntDir>$(Platform)\$(Configuration)\$(MSBuildProjectName)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <IntDir>$(Platform)\$(Configuration)\$(MSBuildProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)external\stb;D:\Dev\VulkanSDK-1.1.106.0\Include;D:\Dev\VulkanSDK-1.1.106.0\Third-Party\Include\SDL2;D:\Dev\VulkanSDK-1.1.106.0\Third-Party\Include\glm;D:\Dev\VulkanSDK-1.1.106.0\glslang</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>VK_USE_PLATFORM_WIN32_KHR;NOMINMAX;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <AdditionalLibraryDirectories>D:\Dev\VulkanSDK-1.1.106.0\Third-Party\Bin;D:\Dev\VulkanSDK-1.1.106.0\Lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>vulkan-1.lib;SDL2.lib;SDL2main.lib;lotus-engine.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)external\stb;D:\Dev\VulkanSDK-1.1.106.0\Include;D:\Dev\VulkanSDK-1.1.106.0\Third-Party\Include\SDL2;D:\Dev\VulkanSDK-1.1.106.0\Third-Party\Include\glm;D:\Dev\VulkanSDK-1.1.106.0\glslang</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>VK_USE_PLATFORM_WIN32_KHR;NOMINMAX;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalLibraryDirectories>D:\Dev\VulkanSDK-1.1.106.0\Third-Party\Bin;D:\Dev\VulkanSDK-1.1.106.0\Lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>vulkan-1.lib;SDL2.lib;SDL2main.lib;lotus-engine.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="ffxi\texture.cpp" />
    <ClCompile Include="ffxi\ffxi_load_land_test.cpp" />
    <ClCompile Include="ffxi\mmb.cpp" />
    <ClCompile Include="ffxi\mzb.cpp" />
    <ClCompile Include="main.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="ffxi\texture.h" />
    <ClInclude Include="ffxi\ffxi_load_land_test.h" />
    <ClInclude Include="ffxi\key_tables.h" />
    <ClInclude Include="ffxi\mmb.h" />
    <ClInclude Include="ffxi\mzb.h" />
    <ClInclude Include="test_loader.h" />
  </ItemGroup>
  <ItemGroup>
    <None Include="shaders\frag_common.frag" />
    <CustomBuild Include="shaders\shader.frag">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">glslc.exe $(ProjectDir)shaders\shader.frag -o $(ProjectDir)shaders\frag.spv</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)shaders\frag.spv;%(Outputs)</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)shaders\frag_common.frag;%(AdditionalInputs)</AdditionalInputs>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</BuildInParallel>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">glslc.exe $(ProjectDir)shaders\shader.frag -o $(ProjectDir)shaders\frag.spv</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)shaders\frag.spv;%(Outputs)</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)shaders\frag_common.frag;%(AdditionalInputs)</AdditionalInputs>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Compiling shader.frag...</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Compiling shader.frag...</Message>
    </CustomBuild>
    <CustomBuild Include="shaders\shader.vert">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">glslc.exe $(ProjectDir)shaders\shader.vert -o $(ProjectDir)shaders\vert.spv</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">glslc.exe $(ProjectDir)shaders\shader.vert -o $(ProjectDir)shaders\vert.spv</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)shaders\vert.spv;%(Outputs)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)shaders\vert.spv;%(Outputs)</Outputs>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Compiling shader.vert...</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Compiling shader.vert...</Message>
    </CustomBuild>
    <CustomBuild Include="shaders\shader_blend.frag">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">glslc.exe $(ProjectDir)shaders\shader_blend.frag -o $(ProjectDir)shaders\frag_blend.spv</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">glslc.exe $(ProjectDir)shaders\shader_blend.frag -o $(ProjectDir)shaders\frag_blend.spv</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)shaders\frag_blend.spv;%(Outputs)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)shaders\frag_blend.spv;%(Outputs)</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)shaders\frag_common.frag;%(AdditionalInputs)</AdditionalInputs>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</BuildInParallel>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)shaders\frag_common.frag;%(AdditionalInputs)</AdditionalInputs>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Compiling shader_blend.frag...</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Compiling shader_blend.frag...</Message>
    </CustomBuild>
    <CustomBuild Include="shaders\shader_shadow.vert">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">glslc.exe $(ProjectDir)shaders\shader_shadow.vert -o $(ProjectDir)shaders\vert_shadow.spv</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">glslc.exe $(ProjectDir)shaders\shader_shadow.vert -o $(ProjectDir)shaders\vert_shadow.spv</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Compiling shader_shadow.vert...</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Compiling shader_shadow.vert...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)shaders\vert_shadow.spv;%(Outputs)</Outputs>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</BuildInParallel>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)shaders\vert_shadow.spv;%(Outputs)</Outputs>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</BuildInParallel>
    </CustomBuild>
    <CustomBuild Include="shaders\shader_shadow.frag">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">glslc.exe $(ProjectDir)shaders\shader_shadow.frag -o $(ProjectDir)shaders\frag_shadow.spv</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">glslc.exe $(ProjectDir)shaders\shader_shadow.frag -o $(ProjectDir)shaders\frag_shadow.spv</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Compiling shader_shadow.frag...</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Compiling shader_shadow.frag...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)shaders\frag_shadow.spv;%(Outputs)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)shaders\frag_shadow.spv;%(Outputs)</Outputs>
    </CustomBuild>
    <CustomBuild Include="shaders\shader_deferred_raster.frag">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">glslc.exe $(ProjectDir)shaders\shader_deferred_raster.frag -o $(ProjectDir)shaders\frag_deferred_raster.spv</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">glslc.exe $(ProjectDir)shaders\shader_deferred_raster.frag -o $(ProjectDir)shaders\frag_deferred_raster.spv</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Compiling shader_deferred_raster.frag...</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Compiling shader_deferred_raster.frag...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)shaders\frag_deferred_raster.spv;%(Outputs)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)shaders\frag_deferred_raster.spv;%(Outputs)</Outputs>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</BuildInParallel>
    </CustomBuild>
    <CustomBuild Include="shaders\shader_deferred.vert">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">glslc.exe $(ProjectDir)shaders\shader_deferred.vert -o $(ProjectDir)shaders\vert_deferred.spv</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">glslc.exe $(ProjectDir)shaders\shader_deferred.vert -o $(ProjectDir)shaders\vert_deferred.spv</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Compiling shader_deferred.vert...</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Compiling shader_deferred.vert...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)shaders\vert_deferred.spv;%(Outputs)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)shaders\vert_deferred.spv;%(Outputs)</Outputs>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</BuildInParallel>
    </CustomBuild>
    <CustomBuild Include="shaders\shader_deferred_raytrace.frag">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">glslc.exe $(ProjectDir)shaders\shader_deferred_raytrace.frag -o $(ProjectDir)shaders\frag_deferred_raytrace.spv</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">glslc.exe $(ProjectDir)shaders\shader_deferred_raytrace.frag -o $(ProjectDir)shaders\frag_deferred_raytrace.spv</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Compiling shader_deferred_raytrace.frag...</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Compiling shader_deferred_raytrace.frag...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)shaders\frag_deferred_raytrace.spv;%(Outputs)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)shaders\frag_deferred_raytrace.spv;%(Outputs)</Outputs>
    </CustomBuild>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>